openapi: 3.0.1
info:
  title: Blckswan Security
  description: Hardended security-API with features from the  Blckswan-2.0 specification
  termsOfService: http://ungtb10d.github.io/terms
  contact:
    name: BLCKSWAN
  license:
    name: MIT
  version: 3.0.0
servers:
- url: http://ungtb10d.github.io/blckswan/
paths:
  /locs:
    get:
      description: Returns all locs from the system that the user has access to
      operationId: findlocs
      parameters:
      - name: tags
        in: query
        description: tags to filter by
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: maximum number of results to return
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: loc licence
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/loc'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Loc'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Loc'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Loc'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/html:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    post:
      description: Creates a new loc in the store.  Duplicates are allowed
      operationId: addLoc
      requestBody:
        description: Loc to add to the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewLoc'
        required: true
      responses:
        "200":
          description: loc response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Loc'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-codegen-request-body-name: Loc
  /locs/{id}:
    get:
      description: "Returns a user based on a single ID, if the user does not have\
        \ access to the loc"
      operationId: findlocById
      parameters:
      - name: id
        in: path
        description: ID of loc to fetch
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: loc response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/loc'
            application/xml:
              schema:
                $ref: '#/components/schemas/loc'
            text/xml:
              schema:
                $ref: '#/components/schemas/loc'
            text/html:
              schema:
                $ref: '#/components/schemas/loc'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/html:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    delete:
      description: deletes a single loc based on the ID supplied
      operationId: deleteloc
      parameters:
      - name: id
        in: path
        description: ID of loc to delete
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "204":
          description: loc deleted
          content: {}
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
components:
  schemas:
    loc:
      allOf:
      - $ref: '#/components/schemas/Newloc'
      - required:
        - id
        type: object
        properties:
          id:
            type: integer
            format: int64
    Newloc:
      required:
      - name
      type: object
      properties:
        name:
          type: string
        tag:
          type: string
    ErrorModel:
      required:
      - code
      - message
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
